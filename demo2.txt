Команды для Модуля 2
echo "nameserver 8.8.8.8" >> /etc/resolv.conf
echo "nameserver 8.8.4.4" >> /etc/resolv.conf
echo "nameserver 192.168.100.2" >> /etc/resolv.conf
1. Настройка доменного контроллера Samba на BR-SRV
Шаг 1.1: Установка и настройка Samba
apt update -y && apt install samba -y

Шаг 1.2: Создание группы и пользователей на BR-SRV
nano user.sh
#!/bin/bash
# Создаем группу hq, если она не существует
if ! getent group hq &> /dev/null; then
    sudo groupadd hq
    echo "Группа hq создана"
else
    echo "Группа hq уже существует"
fi
# Генерируем MD5-хэш для пароля 'P@$$word'
PASS_HASH=$(openssl passwd -1 'P@$$word')
# Создаем 5 пользователей
for i in {1..5}; do
    username="user${i}.hq"
    # Создаём пользователя
    sudo useradd -m -g hq -p "$PASS_HASH" "$username"
    # Проверяем, успешно ли создан пользователь
    if [ $? -eq 0 ]; then
        echo "Пользователь $username успешно создан"
        # Дополнительно проверяем, существует ли пользователь
        if getent passwd "$username" &> /dev/null; then
            echo "Пользователь $username существует в системе"
        else
            echo "Ошибка: Пользователь $username не найден в системе" >&2
        fi
    else
        echo "Ошибка при создании пользователя $username" >&2
    fi
done
# Выводим список созданных пользователей
echo -e "\nСписок созданных пользователей:"
getent passwd | grep -E "user[1-5]\.hq"

Шаг 1.3: Делаем исполняемым файлом и запускаем
chmod +x user.sh
./user.sh

Шаг 1.2: Настройка Samba для домена
nano setup_samba_ad.sh
#!/bin/bash
# === Установка Samba AD DC на Debian ===
# 1. Обновление системы
apt update
# 2. Установка необходимых пакетов
apt install -y samba winbind libpam-winbind libnss-winbind \
    libpam-krb5 krb5-config krb5-user dnsutils
# 3. Остановка и маскировка старых служб
systemctl stop smbd nmbd winbind
systemctl mask smbd nmbd winbind
# 4. Удаление старого конфига (если есть)
rm -f /etc/samba/smb.conf
# 5. Провизия домена Samba AD
samba-tool domain provision \
    --realm=AU-TEAM.IRPO \
    --domain=AU-TEAM \
    --server-role=dc \
    --dns-backend=SAMBA_INTERNAL \
    --host-ip=192.168.200.2 \
    --adminpass=P@ssw0rd
# 6. Копирование Kerberos-конфигурации
cp /var/lib/samba/private/krb5.conf /etc/krb5.conf
# 7. Настройка hosts
echo "192.168.200.2 br-srv.au-team.irpo br-srv" >> /etc/hosts
# 8. Настройка DNS для локального использования
echo "nameserver 8.8.8.8" >> /etc/resolv.conf
echo "nameserver 8.8.4.4" >> /etc/resolv.conf
echo "nameserver 192.168.200.2" >> /etc/resolv.conf
# 9. Обновление DNS-записей
samba_dnsupdate --verbose --force
# 10. Включение автозапуска и запуск службы Samba AD DC
systemctl unmask samba-ad-dc
systemctl enable samba-ad-dc
systemctl restart samba-ad-dc
# 11. Обновление пароля администратора (по желанию)
samba-tool user setpassword administrator --newpassword='P@ssw0rd'
# 12. Обновление конфигурации Kerberos
cat > /etc/krb5.conf <<EOF
[libdefaults]
    default_realm = AU-TEAM.IRPO
    dns_lookup_realm = false
    dns_lookup_kdc = true
[realms]
    AU-TEAM.IRPO = {
        kdc = br-srv.au-team.irpo
        admin_server = br-srv.au-team.irpo
    }
[domain_realm]
    .au-team.irpo = AU-TEAM.IRPO
    au-team.irpo = AU-TEAM.IRPO
EOF
# 13. Дополнительные проверки
echo "=== Проверка состояния Samba AD ==="
systemctl status samba-ad-dc
echo "=== Проверка Kerberos ==="
kinit administrator@AU-TEAM.IRPO
klist
echo "=== Проверка DNS ==="
dig @127.0.0.1 _ldap._tcp.au-team.irpo SRV
host -t SRV _ldap._tcp.au-team.irpo
echo "=== Состояние AD ==="
samba-tool drs showrepl
samba-tool user list
samba-tool domain info au-team.irpo
samba-tool dns zonelist 127.0.0.1
echo "=== Логи Samba AD ==="
journalctl -u samba-ad-dc | tail -n 100
echo "✅ Установка и настройка Samba AD завершена!"

chmod +x setup_samba_ad.sh
./setup_samba_ad.sh

Шаг 1.7: Настройка sudo для группы hq
echo "%hq ALL=(ALL) NOPASSWD: /bin/grep, /bin/cat, /usr/bin/id" >> /etc/sudoers

Шаг 1.8: Присоединение HQ-CLI к домену
# На HQ-CLI:
# Шаг 1: Обновите sources.list
echo "deb http://archive.debian.org/debian buster main contrib non-free" > /etc/apt/sources.list
echo "deb http://archive.debian.org/debian-security buster/updates main contrib non-free" >> /etc/apt/sources.list
apt install -y debian-archive-keyring
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517
apt update
apt install -y smbclient samba-common samba-common-bin winbind libpam-winbind libnss-winbind krb5-user
echo "192.168.200.2 br-rtr.au-team.irpo br-rtr" >> /etc/hosts
cat > /etc/krb5.conf <<EOF
[libdefaults]
    default_realm = AU-TEAM.IRPO
    dns_lookup_realm = false
    dns_lookup_kdc = true
[realms]
AU-TEAM.IRPO = {
    kdc = br-rtr.au-team.irpo
    admin_server = br-rtr.au-team.irpo
}
[domain_realm]
.au-team.irpo = AU-TEAM.IRPO
au-team.irpo = AU-TEAM.IRPO
EOF
kinit administrator@AU-TEAM.IRPO

2. Настройка файлового хранилища на HQ-SRV
Шаг 2.1: Добавление дисков RAID 5
apt install mdadm -y
# Предполагается, что добавлены три новых диска, например, /dev/sd{b,c,d}
mdadm --create --verbode /dev/md0 --level=1 --raid-devices=2 /dev/sdb dev/sdc --spare-devices=1 /dev/sdd
cat /proc/mdstat
mdadm --detail --scan >> /etc/mdadm/mdadm.conf
update-initramfs -u
mkfs –t ext4 /dev/md0
mkdir -p /raid5
nano /etc/fstab
/dev/md0 /raid5 ext4 defaults 0 0
mount -a

Шаг 2.2: Настройка mdadm.conf
mdadm --detail --scan >> /etc/mdadm.conf

Шаг 2.3: Форматирование и монтирование
mkfs.ext4 /dev/md0
mkdir /raid5
echo "/dev/md0 /raid5 ext4 defaults 0 2" >> /etc/fstab
mount -a

Шаг 2.4: Настройка NFS
apt install nfs-server -y
echo "/raid5/nfs 192.168.100.0/26(rw,sync,no_subtree_check)" >> /etc/exports
exportfs -a
systemctl restart nfs-server

Шаг 2.5: Автомонтирование на HQ-CLI
# На HQ-CLI:
mkdir /mnt/nfs
echo "192.168.100.2:/raid5/nfs /mnt/nfs nfs defaults 0 0" >> /etc/fstab
mount -a

3. Настройка службы сетевого времени
Шаг 3.1: Настройка сервера chrony на HQ-RTR
apt install chrony -y
sed -i 's/^# *stratum 0/stratum 5/' /etc/chrony/chrony.conf
systemctl enable --now chrony

Шаг 3.2: Настройка клиентов
# На HQ-SRV, HQ-CLI, BR-RTR, BR-SRV:
apt install chrony -y
sed -i 's/^# *server 0.ubuntu.pool.ntp.org iburst/server 192.168.100.1 iburst/' /etc/chrony/chrony.conf
systemctl enable --now chrony

4. Настройка Ansible на BR-SRV
Шаг 4.1: Установка Ansible
apt install ansible -y

Шаг 4.2: Создание инвентаря
mkdir -p /etc/ansible
tee /etc/ansible/hosts << 'EOF'
[all:vars]
ansible_user=sshuser
ansible_port=2024

[servers]
hq-srv ansible_host=192.168.100.2
br-srv ansible_host=192.168.200.2

[routers]
hq-rtr ansible_host=192.168.100.1
br-rtr ansible_host=192.168.200.1

[cli]
hq-cli ansible_host=192.168.100.66
EOF
Шаг 4.3: Проверка подключения
ansible all -m ping

5. Развертывание приложений в Docker
Шаг 5.1: Установка Docker
apt install docker.io -y
systemctl enable --now docker

Шаг 5.2: Создание docker-compose файла
tee ~/wiki.yml << 'EOF'
version: '3'
services:
  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      MYSQL_DATABASE: mediawiki
      MYSQL_USER: wiki
      MYSQL_PASSWORD: WikiP@ssw0rd
    volumes:
      - ./mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - wiki_network

  wiki:
    image: mediawiki
    container_name: wiki
    environment:
      MEDIAWIKI_DB_HOST: mariadb
      MEDIAWIKI_DB_USER: wiki
      MEDIAWIKI_DB_PASSWORD: WikiP@ssw0rd
      MEDIAWIKI_DB_NAME: mediawiki
    ports:
      - "8080:80"
    volumes:
      - ./LocalSettings.php:/var/www/html/LocalSettings.php
    networks:
      - wiki_network

networks:
  wiki_network:
    driver: bridge

Шаг 5.3: Настройка LocalSettings.php
tee ~/LocalSettings.php << 'EOF'
<?php
$wgSitename = "Wiki";
$wgServer = "http://wiki.au-team.irpo";
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = "mediawiki";
$wgDBuser = "wiki";
$wgDBpassword = "WikiP@ssw0rd";
?>

Шаг 5.4: Запуск контейнеров
docker-compose -f wiki.yml up -d

6. Настройка статической трансляции портов
Шаг 6.1: На BR-RTR
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.200.2:8080
iptables -t nat -A POSTROUTING -j MASQUERADE
apt install iptables-persistent -y
netfilter-persistent save

Шаг 6.2: На HQ-RTR
iptables -t nat -A PREROUTING -p tcp --dport 2024 -j DNAT --to-destination 192.168.100.2:2024
iptables -t nat -A POSTROUTING -j MASQUERADE
apt install iptables-persistent -y
netfilter-persistent save

7. Настройка Moodle на HQ-SRV
Шаг 7.1: Установка необходимых пакетов
apt install apache2 mariadb-server php libapache2-mod-php php-mysql -y

Шаг 7.2: Настройка базы данных
mysql -u root -e "
CREATE DATABASE moodledb;
CREATE USER moodle IDENTIFIED BY 'P@ssw0rd';
GRANT ALL PRIVILEGES ON moodledb.* TO moodle;
FLUSH PRIVILEGES;"

Шаг 7.3: Установка Moodle
wget https://download.moodle.org/download.php?version=311 -O moodle-latest.zip
unzip moodle-latest.zip -d /var/www/html/
chown -R www-data:www-data /var/www/html/moodle

Шаг 7.4: Настройка Apache
tee /etc/apache2/sites-available/moodle.conf << 'EOF'
<VirtualHost *:80>
    ServerName moodle.au-team.irpo
    DocumentRoot /var/www/html/moodle
    <Directory /var/www/html/moodle>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
    </Directory>
</VirtualHost>
EOF
a2ensite moodle.conf
systemctl restart apache2

8. Настройка обратного прокси-сервера nginx на HQ-RTR

Шаг 8.1: Установка nginx
apt install nginx -y

Шаг 8.2: Настройка виртуальных хостов
tee /etc/nginx/sites-available/moodle << 'EOF'
server {
    listen 80;
    server_name moodle.au-team.irpo;
    location / {
        proxy_pass http://192.168.100.2:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF
tee /etc/nginx/sites-available/wiki << 'EOF'
server {
    listen 80;
    server_name wiki.au-team.irpo;
    location / {
        proxy_pass http://192.168.200.2:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF
ln -s /etc/nginx/sites-available/moodle /etc/nginx/sites-enabled/
ln -s /etc/nginx/sites-available/wiki /etc/nginx/sites-enabled/
nginx -t && systemctl restart nginx

9. Установка Яндекс Браузера на HQ-CLI
Шаг 9.1: Установка браузера

wget https://yandex.ru/browser/ -O yandex-browser.deb
dpkg -i yandex-browser.deb
apt install -f -y
Отчёты и проверки
Отчёт 1: Настройка Samba и домена.
Отчёт 2: Настройка RAID 5 и NFS.
Отчёт 3: Настройка chrony.
Отчёт 4: Настройка Ansible.
Отчёт 5: Настройка Docker, Moodle, nginx и Яндекс Браузера.
Каждый отчёт должен содержать подробное описание выполненных шагов, настроек и результатов проверок.

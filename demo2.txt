Команды для Модуля 2
1. Настройка доменного контроллера Samba на BR-SRV
Шаг 1.1: Установка и настройка Samba
apt update -y && apt install samba -y

Шаг 1.2: Создание группы и пользователей на BR-SRV
nano user.sh
#!/bin/bash
if ! getent group hq &> /dev/null; then
    sudo groupadd hq
    echo "Группа hq создана"
else
    echo "Группа hq уже существует"
fi
password_hash=$(openssl passwd -1 'P@$$word')
for i in {1..5}; do
    username="user${i}.hq"
    # Создаем пользователя
    sudo useradd -m -g hq -p "$password_hash" "$username"
    # Проверяем, успешно ли создан пользователь
    if [ $? -eq 0 ]; then
        echo "Пользователь $username успешно создан"
        # Дополнительно проверяем, существует ли пользователь
        if getent passwd "$username" &> /dev/null; then
            echo "Пользователь $username существует в системе"
        else
            echo "Ошибка: Пользователь $username не найден в системе" >&2
        fi
    else
        echo "Ошибка при создании пользователя $username" >&2
    fi
done
echo -e "\nСписок созданных пользователей:"
getent passwd | grep -E "user[1-5]\.hq"

Шаг 1.3: Делаем исполняемым файлом и запускаем
chmod +x users.sh
./users.sh

Если хочешь удалить пользователей и группу
#!/bin/bash
# Удаление пользователей
for i in {1..5}; do
    username="user${i}.hq"
    if id "$username" &>/dev/null; then
        sudo userdel -r "$username" 2>/dev/null
        if [ $? -eq 0 ]; then
            echo "Пользователь $username успешно удален"
        else
            echo "Ошибка при удалении пользователя $username" >&2
        fi
    else
        echo "Пользователь $username не существует"
    fi
done
# Удаление группы (только если она пустая)
if getent group hq &>/dev/null; then
    sudo groupdel hq 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "Группа hq успешно удалена"
    else
        echo -e "\nНе удалось удалить группу hq. Возможные причины:"
        echo "1. В группе остались пользователи"
        echo "2. Группа используется как primary group для других пользователей"
        echo "3. Нет прав для удаления"
    fi
else
    echo "Группа hq не существует"
fi
echo -e "\nПроверка остатков:"
getent passwd | grep 'hq$'
getent group hq

Делаем его исполняемым и запускаем
chmod +x remove_users.sh
./remove_users.sh

Шаг 1.2: Настройка Samba для домена
mv /etc/samba/smb.conf /etc/samba/smb.conf.bak
tee /etc/samba/smb.conf << 'EOF'
[global]
   workgroup = AU-TEAM
   realm = AU-TEAM.IRPO
   password server = 192.168.100.2
   server string = BR-SRV Samba Server
   password server = 192.168.100.2
   netbios name = br-srv
   interfaces = 192.168.200.2
   bind interfaces only = yes
   security = user
   map to guest = Bad User
   dns proxy = no
   idmap config * : backend = tdb

[Shared]
   path = /srv/shared
   force group = hq
   writable = yes
   create mask = 2770
   directory mask = 2770
   force user = sshuser
   force group = hq
EOF

НА HQ-CLI
[global]
     workgroup = au-team
     realm = au-team.irpo
     security = ADS
     password server = 192.168.100.2
     netbios name = hq-cli
     winbind use default domain = yes
     idmap config * : backend = tdb
     idmap config * : range = 10000-20000

Шаг 1.3. Создаем пользователя и пароль для samba. Пароль я использую P@ssw0rd
smbpasswd -a sshuser

Шаг 1.5: Создание общего каталога и прав
mkdir -p /srv/shared
chmod 2770 /srv/shared
chgrp hq /srv/shared

Шаг 1.6: Перезапуск Samba
systemctl restart smbd nmbd

Шаг 1.7. Проверка работоспособности, можно на BR-SRV и также на HQ-CLI
smbclient //br-srv.au-team.irpo/Shared -U sshuser

Шаг 1.7: Настройка sudo для группы hq
echo "%hq ALL=(ALL) NOPASSWD: /bin/grep, /bin/cat, /usr/bin/id" >> /etc/sudoers

Шаг 1.8: Присоединение HQ-CLI к домену
# На HQ-CLI:
apt install samba-client -y
echo "password = P@ssw0rd" > /tmp/join.conf
net join -U sshuser

2. Настройка файлового хранилища на HQ-SRV
Шаг 2.1: Добавление дисков RAID 5
# Предполагается, что добавлены три новых диска, например, /dev/sd{b,c,d}
mdadm --create --verbose /dev/md0 --level=5 --raid-devices=3 /dev/sd{b,c,d}

Шаг 2.2: Настройка mdadm.conf
mdadm --detail --scan >> /etc/mdadm.conf

Шаг 2.3: Форматирование и монтирование
mkfs.ext4 /dev/md0
mkdir /raid5
echo "/dev/md0 /raid5 ext4 defaults 0 2" >> /etc/fstab
mount -a

Шаг 2.4: Настройка NFS
apt install nfs-server -y
echo "/raid5/nfs 192.168.100.0/26(rw,sync,no_subtree_check)" >> /etc/exports
exportfs -a
systemctl restart nfs-server

Шаг 2.5: Автомонтирование на HQ-CLI
# На HQ-CLI:
mkdir /mnt/nfs
echo "192.168.100.2:/raid5/nfs /mnt/nfs nfs defaults 0 0" >> /etc/fstab
mount -a

3. Настройка службы сетевого времени
Шаг 3.1: Настройка сервера chrony на HQ-RTR
apt install chrony -y
sed -i 's/^# *stratum 0/stratum 5/' /etc/chrony/chrony.conf
systemctl enable --now chrony

Шаг 3.2: Настройка клиентов
# На HQ-SRV, HQ-CLI, BR-RTR, BR-SRV:
apt install chrony -y
sed -i 's/^# *server 0.ubuntu.pool.ntp.org iburst/server 192.168.100.1 iburst/' /etc/chrony/chrony.conf
systemctl enable --now chrony

4. Настройка Ansible на BR-SRV
Шаг 4.1: Установка Ansible
apt install ansible -y

Шаг 4.2: Создание инвентаря
mkdir -p /etc/ansible
tee /etc/ansible/hosts << 'EOF'
[all:vars]
ansible_user=sshuser
ansible_port=2024

[servers]
hq-srv ansible_host=192.168.100.2
br-srv ansible_host=192.168.200.2

[routers]
hq-rtr ansible_host=192.168.100.1
br-rtr ansible_host=192.168.200.1

[cli]
hq-cli ansible_host=192.168.100.66
EOF
Шаг 4.3: Проверка подключения
ansible all -m ping

5. Развертывание приложений в Docker
Шаг 5.1: Установка Docker
apt install docker.io -y
systemctl enable --now docker

Шаг 5.2: Создание docker-compose файла
tee ~/wiki.yml << 'EOF'
version: '3'
services:
  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      MYSQL_DATABASE: mediawiki
      MYSQL_USER: wiki
      MYSQL_PASSWORD: WikiP@ssw0rd
    volumes:
      - ./mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - wiki_network

  wiki:
    image: mediawiki
    container_name: wiki
    environment:
      MEDIAWIKI_DB_HOST: mariadb
      MEDIAWIKI_DB_USER: wiki
      MEDIAWIKI_DB_PASSWORD: WikiP@ssw0rd
      MEDIAWIKI_DB_NAME: mediawiki
    ports:
      - "8080:80"
    volumes:
      - ./LocalSettings.php:/var/www/html/LocalSettings.php
    networks:
      - wiki_network

networks:
  wiki_network:
    driver: bridge

Шаг 5.3: Настройка LocalSettings.php
tee ~/LocalSettings.php << 'EOF'
<?php
$wgSitename = "Wiki";
$wgServer = "http://wiki.au-team.irpo";
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = "mediawiki";
$wgDBuser = "wiki";
$wgDBpassword = "WikiP@ssw0rd";
?>

Шаг 5.4: Запуск контейнеров
docker-compose -f wiki.yml up -d

6. Настройка статической трансляции портов
Шаг 6.1: На BR-RTR
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.200.2:8080
iptables -t nat -A POSTROUTING -j MASQUERADE
apt install iptables-persistent -y
netfilter-persistent save

Шаг 6.2: На HQ-RTR
iptables -t nat -A PREROUTING -p tcp --dport 2024 -j DNAT --to-destination 192.168.100.2:2024
iptables -t nat -A POSTROUTING -j MASQUERADE
apt install iptables-persistent -y
netfilter-persistent save

7. Настройка Moodle на HQ-SRV
Шаг 7.1: Установка необходимых пакетов
apt install apache2 mariadb-server php libapache2-mod-php php-mysql -y

Шаг 7.2: Настройка базы данных
mysql -u root -e "
CREATE DATABASE moodledb;
CREATE USER moodle IDENTIFIED BY 'P@ssw0rd';
GRANT ALL PRIVILEGES ON moodledb.* TO moodle;
FLUSH PRIVILEGES;"

Шаг 7.3: Установка Moodle
wget https://download.moodle.org/download.php?version=311 -O moodle-latest.zip
unzip moodle-latest.zip -d /var/www/html/
chown -R www-data:www-data /var/www/html/moodle

Шаг 7.4: Настройка Apache
tee /etc/apache2/sites-available/moodle.conf << 'EOF'
<VirtualHost *:80>
    ServerName moodle.au-team.irpo
    DocumentRoot /var/www/html/moodle
    <Directory /var/www/html/moodle>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
    </Directory>
</VirtualHost>
EOF
a2ensite moodle.conf
systemctl restart apache2

8. Настройка обратного прокси-сервера nginx на HQ-RTR

Шаг 8.1: Установка nginx
apt install nginx -y

Шаг 8.2: Настройка виртуальных хостов
tee /etc/nginx/sites-available/moodle << 'EOF'
server {
    listen 80;
    server_name moodle.au-team.irpo;
    location / {
        proxy_pass http://192.168.100.2:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF
tee /etc/nginx/sites-available/wiki << 'EOF'
server {
    listen 80;
    server_name wiki.au-team.irpo;
    location / {
        proxy_pass http://192.168.200.2:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
EOF
ln -s /etc/nginx/sites-available/moodle /etc/nginx/sites-enabled/
ln -s /etc/nginx/sites-available/wiki /etc/nginx/sites-enabled/
nginx -t && systemctl restart nginx

9. Установка Яндекс Браузера на HQ-CLI
Шаг 9.1: Установка браузера

wget https://yandex.ru/browser/ -O yandex-browser.deb
dpkg -i yandex-browser.deb
apt install -f -y
Отчёты и проверки
Отчёт 1: Настройка Samba и домена.
Отчёт 2: Настройка RAID 5 и NFS.
Отчёт 3: Настройка chrony.
Отчёт 4: Настройка Ansible.
Отчёт 5: Настройка Docker, Moodle, nginx и Яндекс Браузера.
Каждый отчёт должен содержать подробное описание выполненных шагов, настроек и результатов проверок.
